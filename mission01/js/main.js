
const user = {
  id:'asd@naver.com',
  pw:'spdlqj123!@'
}

/*

1. email 정규표현식을 사용한 validation
2. pw 정규표현식을 사용한 validation
3. 상태 변수 관리
4. 로그인 버튼을 클릭시 조건처리

*/

function emailReg(text){
  const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

  return re.test(String(text).toLowerCase())
}

function pwReg(text){
  const re = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^*+=-]).{6,16}$/;
  return re.test(String(text).toLowerCase());
}


/*
⛰️
구현해야하는 기능

⛰️
아이디, 비밀번호가 조건에 맞게 작성이 되었는가에 대한 정보 제공 기능

🚩
1.인풋의 밸류값을 가져오는 메서드를 활용하여 입력된 값을 가져오고 
2.정규식을 활용하여 정해놓은 규칙과 맞는지 확인하고 
3.틀리면 css와 html에 작성되어 있는 요소를 이용하여 에러메시지와 외곽선을 빨각색으로 변경한다.

true -> 아무변화없음
false -> 브라우저에 html에 이미 작성해놓은 에러메시지 요소를 활용
강사님이 이미 .is--invalid라는 클래스가 추가되면 디스플레이가 바뀌도록 CSS에 설정해놓은것을 이용하면 될거 같다. 
+결합자 이기에 error메세지와 인접하는 input의 class에 추가를 해주면 될거 같다.
+
상자의 외곽선 색도 바귀어야 하기에 css에 input의 클래스이름.is--invalid 스타일을 추가해주었다. 

✨
1.



⛰️
아이디, 비밀번호가 일치시 로그인되는 기능

🚩
1.인풋의 밸류값을 가져오는 메서드를 활용하여 입력된 값을 가져오고 
2.아이디와 비밀번호를 비교하여 같은지 확인하고
3.맞으면 사이트를 이동하는 매서드를 이용해 사이트를 이동시키고 아니면 에러 메시지를 알림창으로 띄운다

true-> welcome결과창
false->  아이디(로그인 전용 아이디) 또는 비밀번호를 잘못 입력했습니다.
입력하신 내용을 다시 확인해주세요. 메시지를 표시

✨
1.사용자가 입력하는 정보를 가져와야한다.

*/



